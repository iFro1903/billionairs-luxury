# NGINX Konfiguration für billionairs.luxury
# Speichern unter: /etc/nginx/sites-available/billionairs

server {
    listen 80;
    listen [::]:80;
    server_name billionairs.luxury www.billionairs.luxury;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name billionairs.luxury www.billionairs.luxury;

    # SSL Zertifikat (z.B. von Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/billionairs.luxury/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/billionairs.luxury/privkey.pem;
    
    # SSL Konfiguration (A+ Rating)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https://js.stripe.com https://m.stripe.network; script-src 'self' 'unsafe-inline' https://js.stripe.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.stripe.com; frame-src https://js.stripe.com;" always;
    
    # Root Directory
    root /var/www/billionairs;
    index index.html;
    
    # Logging
    access_log /var/log/nginx/billionairs_access.log;
    error_log /var/log/nginx/billionairs_error.log;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json image/svg+xml;
    
    # Cache Static Assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Reverse Proxy zu Node.js Server
    location /create-checkout-session {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts für große Zahlungen
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
    }
    
    location /webhook {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Wichtig für Stripe Webhooks
        client_max_body_size 1M;
    }
    
    location /health {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Serve Static Files
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Deny access to sensitive files
    location ~ /\.env {
        deny all;
        return 404;
    }
    
    location ~ /node_modules {
        deny all;
        return 404;
    }
    
    # Custom Error Pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;
}

# Installations-Anleitung:
# 1. sudo ln -s /etc/nginx/sites-available/billionairs /etc/nginx/sites-enabled/
# 2. sudo nginx -t
# 3. sudo systemctl reload nginx
#
# SSL-Zertifikat mit Let's Encrypt:
# sudo certbot --nginx -d billionairs.luxury -d www.billionairs.luxury
